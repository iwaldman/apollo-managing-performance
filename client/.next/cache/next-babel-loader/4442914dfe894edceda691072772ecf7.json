{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\dev\\\\apollo-managing-performance\\\\client\\\\pages\\\\_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\nexport default function App({\n  Component,\n  pageProps\n}) {\n  const apolloClient = new ApolloClient({\n    uri: 'http://localhost:4000',\n    cache: new InMemoryCache()\n  });\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: apolloClient,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/dev/apollo-managing-performance/client/pages/_app.js"],"names":["ApolloClient","ApolloProvider","InMemoryCache","App","Component","pageProps","apolloClient","uri","cache","margin"],"mappings":";;;;;;;;;AAAA,SAASA,YAAT,EAAuBC,cAAvB,EAAuCC,aAAvC,QAA4D,gBAA5D;AAEA,eAAe,SAASC,GAAT,CAAa;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAb,EAAuC;AACpD,QAAMC,YAAY,GAAG,IAAIN,YAAJ,CAAiB;AACpCO,IAAAA,GAAG,EAAE,uBAD+B;AAEpCC,IAAAA,KAAK,EAAE,IAAIN,aAAJ;AAF6B,GAAjB,CAArB;AAKA,sBACE,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAEI,YAAxB;AAAA,2BACE;AAAK,MAAA,KAAK,EAAE;AAAEG,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAA,6BACE,QAAC,SAAD,oBAAeJ,SAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD","sourcesContent":["import { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client'\r\n\r\nexport default function App({ Component, pageProps }) {\r\n  const apolloClient = new ApolloClient({\r\n    uri: 'http://localhost:4000',\r\n    cache: new InMemoryCache(),\r\n  })\r\n\r\n  return (\r\n    <ApolloProvider client={apolloClient}>\r\n      <div style={{ margin: '20px' }}>\r\n        <Component {...pageProps} />\r\n      </div>\r\n    </ApolloProvider>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}